
@incollection{maurer_unifying_2009,
	address = {Berlin, Heidelberg},
	series = {{LNCS}},
	title = {Unifying {Zero}-{Knowledge} {Proofs} of {Knowledge}},
	volume = {5580},
	isbn = {978-3-642-02383-5 978-3-642-02384-2},
	url = {http://link.springer.com/10.1007/978-3-642-02384-2_17},
	abstract = {We present a simple zero-knowledge proof of knowledge protocol of which many protocols in the literature are instantiations. These include Schnorr’s protocol for proving knowledge of a discrete logarithm, the Fiat-Shamir and Guillou-Quisquater protocols for proving knowledge of a modular root, protocols for proving knowledge of representations (like Okamoto’s protocol), protocols for proving equality of secret values, a protocol for proving the correctness of a Diﬃe-Hellman key, protocols for proving the multiplicative relation of three commitments (as required in secure multi-party computation), and protocols used in credential systems.},
	language = {en},
	urldate = {2022-06-06},
	booktitle = {{AFRICACRYPT} 2009},
	publisher = {Springer},
	author = {Maurer, Ueli},
	year = {2009},
	pages = {272--286},
	file = {Maurer - 2009 - Unifying Zero-Knowledge Proofs of Knowledge.pdf:/home/lucas/archive/Zotero/storage/3VX4K2DU/Maurer - 2009 - Unifying Zero-Knowledge Proofs of Knowledge.pdf:application/pdf},
}

@inproceedings{schnorr_efficient_1990,
	address = {New York, NY},
	series = {{LNCS}},
	title = {Efficient {Identification} and {Signatures} for {Smart} {Cards}},
	volume = {435},
	isbn = {978-0-387-34805-6},
	doi = {10.1007/0-387-34805-0_22},
	language = {en},
	booktitle = {{CRYPTO} 1989},
	publisher = {Springer},
	author = {Schnorr, C. P.},
	year = {1990},
	pages = {239--252},
	file = {Full Text PDF:/home/lucas/archive/Zotero/storage/8RARYM7H/Schnorr - 1990 - Efficient Identification and Signatures for Smart .pdf:application/pdf},
}

@incollection{pedersen_non-interactive_1992,
	address = {Berlin, Heidelberg},
	series = {{LNCS}},
	title = {Non-{Interactive} and {Information}-{Theoretic} {Secure} {Verifiable} {Secret} {Sharing}},
	volume = {576},
	isbn = {978-3-540-55188-1},
	url = {http://link.springer.com/10.1007/3-540-46766-1_9},
	language = {en},
	urldate = {2022-06-09},
	booktitle = {{CRYPTO} 91},
	publisher = {Springer},
	author = {Pedersen, Torben Pryds},
	year = {1992},
	pages = {129--140},
	file = {Pedersen - 1992 - Non-Interactive and Information-Theoretic Secure V.pdf:/home/lucas/archive/Zotero/storage/IPIZJMV6/Pedersen - 1992 - Non-Interactive and Information-Theoretic Secure V.pdf:application/pdf},
}

@incollection{icart_how_2009,
	address = {Berlin, Heidelberg},
	series = {{LNCS}},
	title = {How to {Hash} into {Elliptic} {Curves}},
	volume = {5677},
	isbn = {978-3-642-03355-1 978-3-642-03356-8},
	url = {http://link.springer.com/10.1007/978-3-642-03356-8_18},
	abstract = {We describe a new explicit function that given an elliptic curve E deﬁned over Fpn , maps elements of Fpn into E in deterministic polynomial time and in a constant number of operations over Fpn . The function requires to compute a cube root. As an application we show how to hash deterministically into an elliptic curve.},
	language = {en},
	urldate = {2022-06-12},
	booktitle = {{CRYPTO} 2009},
	publisher = {Springer},
	author = {Icart, Thomas},
	year = {2009},
	pages = {303--316},
	file = {Icart - 2009 - How to Hash into Elliptic Curves.pdf:/home/lucas/archive/Zotero/storage/V3YUYLSJ/Icart - 2009 - How to Hash into Elliptic Curves.pdf:application/pdf},
}

@inproceedings{fischer_public_2011,
	title = {A public randomness service},
	abstract = {We argue that it is time to design, implement, and deploy a trusted public randomness server on the Internet. NIST plans to deploy a prototype during 2011. We discuss some of the engineering choices that have been made as well as some of the issues currently under discussion.},
	author = {Fischer, Michael J. and Iorga, Michaela and Peralta, René},
	month = jul,
	year = {2011},
	keywords = {Cryptography, Electronic commerce, Electronic voting, Noise, Randomness server},
	pages = {434--438},
	file = {IEEE Xplore Abstract Record:/home/lucas/archive/Zotero/storage/2AMISTY8/6732429.html:text/html},
}

@article{baigneres_trap_2015,
	title = {Trap {Me} {If} {You} {Can} -- {Million} {Dollar} {Curve}},
	url = {https://eprint.iacr.org/2015/1249},
	language = {en},
	urldate = {2022-06-12},
	author = {Baignères, Thomas and Delerablée, Cécile and Finiasz, Matthieu and Goubin, Louis and Lepoint, Tancrède and Rivain, Matthieu},
	year = {2015},
	file = {Full Text PDF:/home/lucas/archive/Zotero/storage/KB55ZRZW/Baignères et al. - 2015 - Trap Me If You Can -- Million Dollar Curve.pdf:application/pdf;Snapshot:/home/lucas/archive/Zotero/storage/98FTPSDZ/1249.html:text/html},
}

@article{goldwasser_secure_2005,
	title = {Secure {Multi}-{Party} {Computation} without {Agreement}},
	volume = {18},
	issn = {0933-2790, 1432-1378},
	url = {http://link.springer.com/10.1007/s00145-005-0319-z},
	doi = {10.1007/s00145-005-0319-z},
	abstract = {It has recently been shown that authenticated Byzantine agreement, in which more than a third of the parties are corrupted, cannot be securely realized under concurrent or parallel (stateless) composition. This result puts into question any usage of authenticated Byzantine agreement in a setting where many executions take place. In particular, this is true for the whole body of work of secure multi-party protocols in the case that a third or more of the parties are corrupted. This is because these protocols strongly rely on the extensive use of a broadcast channel, which is in turn realized using authenticated Byzantine agreement. We remark that it was accepted folklore that the use of a broadcast channel (or authenticated Byzantine agreement) is actually essential for achieving meaningful secure multi-party computation whenever a third or more of the parties are corrupted. In this paper we show that this folklore is false. We present a mild relaxation of the deﬁnition of secure computation allowing abort. Our new deﬁnition captures all the central security issues of secure computation, including privacy, correctness and independence of inputs. However, the novelty of the deﬁnition is in decoupling the issue of agreement from these issues. We then show that this relaxation suﬃces for achieving secure computation in a point-to-point network. That is, we show that secure multi-party computation for this deﬁnition can be achieved for any number of corrupted parties and without a broadcast channel (or trusted preprocessing phase as required for running authenticated Byzantine agreement). Furthermore, this is achieved by just replacing the broadcast channel in known protocols with a very simple and eﬃcient echo-broadcast protocol. An important corollary of our result is the ability to obtain multi-party protocols that remain secure under composition, without assuming a broadcast channel.},
	language = {en},
	number = {3},
	urldate = {2022-06-13},
	journal = {Journal of Cryptology},
	author = {Goldwasser, Shafi and Lindell, Yehuda},
	month = jul,
	year = {2005},
	pages = {247--287},
	file = {Goldwasser and Lindell - 2005 - Secure Multi-Party Computation without Agreement.pdf:/home/lucas/archive/Zotero/storage/ZG4WH98F/Goldwasser and Lindell - 2005 - Secure Multi-Party Computation without Agreement.pdf:application/pdf},
}

@incollection{canetti_simpler_2015,
	address = {Berlin, Heidelberg},
	title = {A {Simpler} {Variant} of {Universally} {Composable} {Security} for {Standard} {Multiparty} {Computation}},
	volume = {9216},
	isbn = {978-3-662-47999-5 978-3-662-48000-7},
	url = {http://link.springer.com/10.1007/978-3-662-48000-7_1},
	abstract = {In this paper, we present a simpler and more restricted variant of the universally composable security (UC) framework that is suitable for “standard” two-party and multiparty computation tasks. Many of the complications of the UC framework exist in order to enable more general tasks than classic secure computation. This generality may be a barrier to entry for those who are used to the stand-alone model of secure computation and wish to work with universally composable security but are overwhelmed by the diﬀerences. The variant presented here (called simpliﬁed universally composable security, or just SUC) is closer to the deﬁnition of security for multiparty computation in the stand-alone setting. The main diﬀerence is that a protocol in the SUC framework runs with a ﬁxed set of parties who know each other’s identities ahead of time, and machines cannot be added dynamically to the execution. As a result, the deﬁnitions of polynomial time and protocol composition are much simpler. In addition, the SUC framework has authenticated channels built in, as is standard in previous deﬁnitions of security, and all communication is done via the adversary in order to enable arbitrary scheduling of messages. Due to these diﬀerences, not all cryptographic tasks can be expressed in the SUC framework. Nevertheless, standard secure computation tasks (like secure function evaluation) can be expressed. Importantly, we show a natural security-preserving transformation from protocols in the SUC model to protocols in the full-ﬂedged UC model. Consequently, the UC composition theorem holds in the SUC model, and any protocol that is proven secure under SUC can be transformed to a protocol that is secure in the UC model.},
	language = {en},
	urldate = {2022-06-20},
	booktitle = {{CRYPTO} 2015},
	publisher = {Springer},
	author = {Canetti, Ran and Cohen, Asaf and Lindell, Yehuda},
	year = {2015},
	pages = {3--22},
	file = {Canetti et al. - 2015 - A Simpler Variant of Universally Composable Securi.pdf:/home/lucas/archive/Zotero/storage/RCTCJQYJ/Canetti et al. - 2015 - A Simpler Variant of Universally Composable Securi.pdf:application/pdf},
}

@article{kushilevitz_information-theoretically_2009,
	title = {Information-{Theoretically} {Secure} {Protocols} and {Security} {Under} {Composition}},
	url = {https://eprint.iacr.org/2009/630},
	abstract = {We investigate the question of whether security of protocols in the information-theoretic setting (where the adversary is computationally unbounded) implies the security of these protocols under concurrent composition. This question is motivated by the folklore that all known protocols that are secure in the information-theoretic setting are indeed secure under concurrent composition. We provide answers to this question for a number of diﬀerent settings (i.e., considering perfect versus statistical security, and concurrent composition with adaptive versus ﬁxed inputs). Our results enhance the understanding of what is necessary for obtaining security under composition, as well as providing tools (i.e., composition theorems) that can be used for proving the security of protocols under composition while considering only the standard stand-alone deﬁnitions of security.},
	language = {en},
	author = {Kushilevitz, Eyal and Lindell, Yehuda and Rabin, Tal},
	year = {2009},
	file = {Kushilevitz et al. - Information-Theoretically Secure Protocols and Sec.pdf:/home/lucas/archive/Zotero/storage/9QFHFXIJ/Kushilevitz et al. - Information-Theoretically Secure Protocols and Sec.pdf:application/pdf},
}

@article{barak_protocol_2004,
	title = {Protocol {Initialization} for the {Framework} of {Universal} {Composability}},
	url = {https://eprint.iacr.org/2004/006},
	urldate = {2022-06-20},
	author = {Barak, Boaz and Lindell, Yehuda and Rabin, Tal},
	year = {2004},
	file = {Snapshot:/home/lucas/archive/Zotero/storage/SAVEYTG8/006.html:text/html},
}

@article{lindell_simple_2022,
	title = {Simple {Three}-{Round} {Multiparty} {Schnorr} {Signing} with {Full} {Simulatability}},
	url = {https://eprint.iacr.org/2022/374},
	language = {en},
	urldate = {2022-06-20},
	journal = {Cryptology ePrint Archive},
	author = {Lindell, Yehuda},
	year = {2022},
	file = {Full Text PDF:/home/lucas/archive/Zotero/storage/YFH898NE/Lindell - 2022 - Simple Three-Round Multiparty Schnorr Signing with.pdf:application/pdf;Snapshot:/home/lucas/archive/Zotero/storage/Z9WGNW23/374.html:text/html},
}

@article{komlo_frost_2020,
	title = {{FROST}: {Flexible} {Round}-{Optimized} {Schnorr} {Threshold} {Signatures}},
	shorttitle = {{FROST}},
	url = {https://eprint.iacr.org/2020/852},
	language = {en},
	urldate = {2022-06-20},
	journal = {Cryptology ePrint Archive},
	author = {Komlo, Chelsea and Goldberg, Ian},
	year = {2020},
	file = {Full Text PDF:/home/lucas/archive/Zotero/storage/RJY935BM/Komlo and Goldberg - 2020 - FROST Flexible Round-Optimized Schnorr Threshold .pdf:application/pdf;Snapshot:/home/lucas/archive/Zotero/storage/2XNFQ7LD/852.html:text/html},
}

@incollection{nick_musig2_2021,
	series = {{LNCS}},
	title = {{MuSig2}: {Simple} {Two}-{Round} {Schnorr} {Multi}-signatures},
	volume = {12825},
	isbn = {978-3-030-84241-3 978-3-030-84242-0},
	shorttitle = {{MuSig2}},
	url = {https://link.springer.com/10.1007/978-3-030-84242-0_8},
	abstract = {Multi-signatures enable a group of signers to produce a joint signature on a joint message. Recently, Drijvers et al. (S\&P’19) showed that all thus far proposed two-round multisignature schemes in the pure DL setting (without pairings) are insecure under concurrent signing sessions. While Drijvers et al. proposed a secure two-round scheme, this eﬃciency in terms of rounds comes with the price of having signatures that are more than twice as large as Schnorr signatures, which are becoming popular in cryptographic systems due to their practicality (e.g., they will likely be adopted in Bitcoin). If one needs a multi-signature scheme that can be used as a drop-in replacement for Schnorr signatures, then one is forced to resort either to a three-round scheme or to sequential signing sessions, both of which are undesirable options in practice.},
	language = {en},
	urldate = {2022-06-20},
	booktitle = {{CRYPTO} 2021},
	publisher = {Springer},
	author = {Nick, Jonas and Ruffing, Tim and Seurin, Yannick},
	year = {2021},
	pages = {189--221},
	file = {Nick et al. - 2021 - MuSig2 Simple Two-Round Schnorr Multi-signatures.pdf:/home/lucas/archive/Zotero/storage/PTAIHF8E/Nick et al. - 2021 - MuSig2 Simple Two-Round Schnorr Multi-signatures.pdf:application/pdf},
}
